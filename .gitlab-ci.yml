stages:
  - sonarqube-check
  - test
  - build
  - deploy 
variables:
    ANSIBLE_HOST_KEY_CHECKING: 'false'
    ANSIBLE_FORCE_COLOR: 'true'
    ANSIBLE_PYTHON_INTERPRRTER: /usr/bin/python3
    CI_DEBUG_TRACE: "false"


sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - /opt/sonar-scanner-current/bin/sonar-scanner
  allow_failure: true
  only:
    - master # or the name of your main branch
test:
  script:
    - /usr/local/go/bin/go build -o goblog cmd/goblog/main.go
build:
  needs: ["test"]
  script:
    - docker build .  --tag=artifact.tryingadventure.com/goblog:${CI_COMMIT_SHORT_SHA} --no-cache
    - docker push artifact.tryingadventure.com/goblog:${CI_COMMIT_SHORT_SHA}
deploy:
  needs: ["test","build"]
  script:
    - cd deploy/tryingadventure/overlays/prod
    - kustomize edit set image artifact.tryingadventure.com/goblog=artifact.tryingadventure.com/goblog:${CI_COMMIT_SHORT_SHA}  
    - kubectl -n tryingadventure apply -k . 
